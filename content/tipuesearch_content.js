var tipuesearch = {"pages": [{'title': '關於', 'text': '網頁： https://chang-nien-chun.github.io/cd2024/ \n 網誌：\xa0  https://chang-nien-chun.github.io/cd2024/blog \n 報簡：\xa0 https://chang-nien-chun.github.io/cd2024/reveal \n 以太坊：  https: //github.com/Chang-Nien-Chun/cd2024', 'tags': '', 'url': '關於.html'}, {'title': '網誌', 'text': '', 'tags': '', 'url': '網誌.html'}, {'title': 'w1', 'text': '1.建立個人課程倉儲 \n 2.將個人倉儲import至Replit \n 設定 Replit 與 Github 應用授權的說明影片 \n 3.學習利用Replit對Github進行改版 \n 說明如何利用 Replit 對 cd2024 改版 \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '1.學習利用codespace維護倉儲以及網站 \n 如何利用 Github Codespaces 維護網站內容 \n \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '1.將自己的倉儲加入小組的子模組 \n 如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組 \n 2.學習如何在Replit維護分組倉儲 \n 如何在 Replit 維護分組倉儲 \n 3.學習Codespaces如何運用 \n 4.學習利用Github維護倉儲與網站 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '\n 1 00:00:00,000 --> 00:00:03,100 然後來更新一下們剛剛的那一塊 \n 2 00:00:03,100 --> 00:00:05,766 好所以這個key啊他就會是在哪裏 \n 3 00:00:05,933 --> 00:00:08,000 我們假如用這個主態 \n 4 00:00:08,000 --> 00:00:10,500 也就是登入檔的這個指令啊 \n 5 00:00:10,500 --> 00:00:13,733 我們用regedit的話 \n 6 00:00:13,833 --> 00:00:15,400 我們就可以進去找 \n 7 00:00:15,666 --> 00:00:18,133 OK好所以我進來找的時候啊 \n 8 00:00:18,133 --> 00:00:20,166 他就會在Current User下 \n 9 00:00:20,533 --> 00:00:21,333 稍微 \n 10 00:00:22,100 --> 00:00:24,500 OK所以我會跑到 \n 11 00:00:26,533 --> 00:00:29,333 current user下面的Software啊 \n 12 00:00:29,600 --> 00:00:31,066 然後他應該是用 \n 13 00:00:31,066 --> 00:00:33,133 他的這個開發者的名稱 \n 14 00:00:33,333 --> 00:00:34,966 S開頭的Simon \n 15 00:00:35,400 --> 00:00:37,133 好所以你就可以看到 \n 16 00:00:37,733 --> 00:00:39,300 在這個Simon下面呢 \n 17 00:00:39,300 --> 00:00:41,833 就一定有你剛纔的這個 \n 18 00:00:41,833 --> 00:00:43,833 設定的這個session好 \n 19 00:00:43,833 --> 00:00:46,333 也就是我們現在看到的這個 \n 20 00:00:46,333 --> 00:00:49,433 裏面應該就有mdcycu的這個 \n 21 00:00:49,633 --> 00:00:50,433 session \n 22 00:00:50,866 --> 00:00:51,866 這個好 \n 23 00:00:51,866 --> 00:00:53,500 那裏面就會指定啊 \n 24 00:00:53,500 --> 00:00:55,333 指定對應的這個key \n 25 00:00:55,600 --> 00:00:57,733 那表示說這個我SSH \n 26 00:00:57,733 --> 00:01:00,200 就可以用這個session的名稱拿來 \n 27 00:01:00,500 --> 00:01:02,333 進行克隆跟push \n 28 00:01:02,333 --> 00:01:04,833 所以我把這個也把它推出來好了 \n 29 00:01:04,833 --> 00:01:06,100 我把它匯出來 \n 30 00:01:06,200 --> 00:01:08,833 好那放到我剛纔的這個位置啊 \n 31 00:01:08,833 --> 00:01:10,633 我給它稍微改個名字 \n 32 00:01:11,133 --> 00:01:14,033 好我跑到這裏來好我用它了啊 \n 33 00:01:14,100 --> 00:01:17,900 然後他這邊就是我註記一下就是我 \n 34 00:01:18,100 --> 00:01:21,966 基本上這個是IPV4的 \n 35 00:01:27,800 --> 00:01:30,033 OK好了這個把它存起來 \n 36 00:01:30,100 --> 00:01:32,266 好所以我現在應該就有權限好 \n 37 00:01:32,266 --> 00:01:33,433 那有權限之後啊 \n 38 00:01:33,433 --> 00:01:35,433 我就可以把它克隆下來 \n 39 00:01:35,533 --> 00:01:38,900 所以我必須要取到剛纔的 \n 40 00:01:39,066 --> 00:01:42,100 啊這個第四組的後半段 \n 41 00:01:42,500 --> 00:01:44,433 OK所以我把這個複製下來 \n 42 00:01:44,533 --> 00:01:46,433 所以我就想要把它克隆到 \n 43 00:01:46,433 --> 00:01:47,700 我先克隆到C好了 \n 44 00:01:47,700 --> 00:01:49,133 因爲C比較快 \n 45 00:01:49,400 --> 00:01:52,166 好那我給他這個 \n 46 00:01:52,866 --> 00:01:55,166 建立個temp然後進來 \n 47 00:01:55,666 --> 00:01:56,666 OK好 \n 48 00:01:56,666 --> 00:01:58,233 所以意思就是說我原本呢 \n 49 00:01:58,233 --> 00:01:59,266 是在Y槽 \n 50 00:01:59,266 --> 00:02:00,466 那我要切槽 \n 51 00:02:00,466 --> 00:02:02,833 切換槽的話我是打C冒號 \n 52 00:02:03,066 --> 00:02:05,700 然後我make建立個tmp然 \n 53 00:02:05,700 --> 00:02:06,933 後我進來好 \n 54 00:02:06,933 --> 00:02:08,733 那我就要把它克隆到這裏 \n 55 00:02:08,800 --> 00:02:10,233 所以我現在 \n 56 00:02:11,033 --> 00:02:12,833 哦剛剛已經 \n 57 00:02:12,900 --> 00:02:15,000 沒有所以他沒有子模組 \n 58 00:02:15,100 --> 00:02:18,233 不過我還是習慣克隆的時候加上 \n 59 00:02:18,300 --> 00:02:19,200 recurs \n 60 00:02:21,033 --> 00:02:23,400 submodules \n 61 00:02:24,266 --> 00:02:25,633 然後我要SSH \n 62 00:02:25,633 --> 00:02:27,166 所以我必須打git \n 63 00:02:27,900 --> 00:02:30,066 然後MDE CYCU是我的session \n 64 00:02:30,066 --> 00:02:32,300 然後把剛剛那一串複製下來 \n 65 00:02:32,666 --> 00:02:35,200 那我通常還會再加上git好 \n 66 00:02:35,200 --> 00:02:37,500 所以這個指令的意思就是說 \n 67 00:02:38,133 --> 00:02:40,966 我要在c的temp目錄下 \n 68 00:02:41,266 --> 00:02:42,666 然後我要git clone \n 69 00:02:42,666 --> 00:02:45,333 所以git特跟clone中間是空一格 \n 70 00:02:45,333 --> 00:02:47,533 然後這邊再空一格兩個Dash \n 71 00:02:47,800 --> 00:02:50,033 recurse的意思就是說萬一 \n 72 00:02:50,233 --> 00:02:52,200 我這個倉儲裏面的子模組 \n 73 00:02:52,200 --> 00:02:53,733 他還有子模組的話 \n 74 00:02:53,733 --> 00:02:55,100 我要一併把他抓下來 \n 75 00:02:55,100 --> 00:02:56,533 因爲你不曉得 \n 76 00:02:56,533 --> 00:02:58,633 這個我的組員呢 \n 77 00:02:58,633 --> 00:03:00,900 是不是因爲在設計的過程 \n 78 00:03:00,900 --> 00:03:03,333 他需要設子模組或者有其他的安排 \n 79 00:03:03,333 --> 00:03:04,166 我不知道 \n 80 00:03:04,233 --> 00:03:06,800 所以這樣子的話就是萬無一失 \n 81 00:03:06,800 --> 00:03:10,200 那等到你的分組倉儲已經有個 \n 82 00:03:10,600 --> 00:03:12,033 學員的子模組之後 \n 83 00:03:12,033 --> 00:03:13,833 你一定要用這個方式才 \n 84 00:03:13,900 --> 00:03:16,600 可以把全部資料都抓下來OK \n 85 00:03:16,600 --> 00:03:18,433 那git這個沒得選的 \n 86 00:03:18,433 --> 00:03:21,300 因爲Github它就規定了你用SSH \n 87 00:03:21,300 --> 00:03:22,766 一定要用git當user \n 88 00:03:23,133 --> 00:03:26,100 好那小老鼠後面就是我的session \n 89 00:03:26,666 --> 00:03:28,066 那SSH的協定 \n 90 00:03:28,066 --> 00:03:30,366 在你的帳號之前要用冒號 \n 91 00:03:30,433 --> 00:03:32,033 然後這個就是我們的 \n 92 00:03:32,033 --> 00:03:33,800 分組倉儲的對應 \n 93 00:03:34,000 --> 00:03:35,700 這個賬號 \n 94 00:03:35,700 --> 00:03:37,700 然後這個就是第二組的倉儲 \n 95 00:03:37,700 --> 00:03:39,033 所以我這樣子的話 \n 96 00:03:39,233 --> 00:03:41,333 我假如能夠克隆下來 \n 97 00:03:41,333 --> 00:03:43,100 表示我是有權限的 \n 98 00:03:43,400 --> 00:03:43,733 爲什麼 \n 99 00:03:43,733 --> 00:03:46,066 因爲SSH一定要通過剛纔的session \n 100 00:03:46,066 --> 00:03:47,300 我才抓的下來 \n 101 00:03:47,733 --> 00:03:48,666 OK好 \n 102 00:03:48,666 --> 00:03:51,600 所以表示說我這個session是可以 \n 103 00:03:51,666 --> 00:03:55,000 運作的好那緊接着我要把它這個 \n 104 00:03:56,033 --> 00:03:59,733 30號的這個倉儲設爲子模組OK好 \n 105 00:03:59,733 --> 00:04:02,466 所以我就在這邊我就直接要進去了 \n 106 00:04:02,466 --> 00:04:06,066 進入這一組的倉儲對應的目錄 \n 107 00:04:06,066 --> 00:04:07,366 所以他是MID \n 108 00:04:08,200 --> 00:04:09,833 然後a g 2 \n 109 00:04:10,466 --> 00:04:11,533 OK好 \n 110 00:04:11,533 --> 00:04:12,200 那你可以看看 \n 111 00:04:12,200 --> 00:04:14,500 他現在整個資料應該都抓下來 \n 112 00:04:14,500 --> 00:04:15,900 而且沒有子模組 \n 113 00:04:16,066 --> 00:04:17,933 所以我就要下指令我說git \n 114 00:04:18,900 --> 00:04:21,633 submodule我要add \n 115 00:04:22,600 --> 00:04:26,700 然後要把他的這個倉儲啊把它設爲 \n 116 00:04:27,466 --> 00:04:29,300 他的學號411 \n 117 00:04:30,266 --> 00:04:34,933 23130 好所以我看一下這個指令 \n 118 00:04:35,400 --> 00:04:37,900 所以表示說我現在在第二組的倉儲 \n 119 00:04:38,033 --> 00:04:39,800 底下呢我用git \n 120 00:04:40,100 --> 00:04:42,900 然後空一格submodule就是子模組 \n 121 00:04:43,100 --> 00:04:44,100 然後再空一格add \n 122 00:04:44,100 --> 00:04:44,733 表示 \n 123 00:04:44,733 --> 00:04:47,766 我要用git來建立一個子模組 \n 124 00:04:48,700 --> 00:04:49,700 然後再空一格 \n 125 00:04:49,700 --> 00:04:51,766 後面就是我想要 \n 126 00:04:51,900 --> 00:04:55,066 把它納爲子模組的這一位學員 \n 127 00:04:55,066 --> 00:04:57,000 他的課程倉儲 \n 128 00:04:57,000 --> 00:04:58,233 個人的個人倉儲 \n 129 00:04:58,400 --> 00:04:59,566 然後再空一格 \n 130 00:04:59,933 --> 00:05:02,833 然後加入以他的學號當做目錄 \n 131 00:05:03,633 --> 00:05:04,800 就這樣好 \n 132 00:05:04,800 --> 00:05:07,100 那理論上他這邊因爲他是用HDD \n 133 00:05:07,100 --> 00:05:08,700 PS去抓他的 \n 134 00:05:08,700 --> 00:05:09,833 所以表示什麼 \n 135 00:05:09,833 --> 00:05:10,700 表示子模組 \n 136 00:05:10,700 --> 00:05:12,633 我是在分組倉儲裏面 \n 137 00:05:12,633 --> 00:05:14,733 是沒有權限去更新的 \n 138 00:05:15,000 --> 00:05:17,033 好所以我這個時候我就按enter \n 139 00:05:17,533 --> 00:05:18,700 他應該就會把 \n 140 00:05:18,700 --> 00:05:21,400 把他的這個子模組的內容 \n 141 00:05:21,400 --> 00:05:22,400 也就是 \n 142 00:05:22,400 --> 00:05:25,233 30號的這個個人倉儲把他抓下來 \n 143 00:05:25,300 --> 00:05:27,933 而且抓下來就是他現在這個版本 \n 144 00:05:28,266 --> 00:05:31,333 他假如再改版的話我子模組 \n 145 00:05:33,200 --> 00:05:35,500 裏面的這個待會我們把它推上去 \n 146 00:05:35,500 --> 00:05:37,866 就是他目前我引進來的這個 \n 147 00:05:37,866 --> 00:05:39,166 子模組的版本 \n 148 00:05:39,800 --> 00:05:41,633 可是他假如在更新呢 \n 149 00:05:42,300 --> 00:05:44,300 我的分組倉儲裏面的版號 \n 150 00:05:44,300 --> 00:05:45,633 沒有更新的話 \n 151 00:05:45,666 --> 00:05:47,133 我還是引用舊資料 \n 152 00:05:47,133 --> 00:05:48,533 那這個好處就是說 \n 153 00:05:48,533 --> 00:05:51,100 他還沒有處理完的章節 \n 154 00:05:51,400 --> 00:05:52,900 我不用引進來 \n 155 00:05:53,200 --> 00:05:55,333 就是說你你有取捨的 \n 156 00:05:55,333 --> 00:05:57,733 所以這裏面我們現在就可以add \n 157 00:05:59,333 --> 00:06:00,133 commit \n 158 00:06:02,000 --> 00:06:04,333 然後告訴他說我們add \n 159 00:06:04,500 --> 00:06:09,233 41123130 \n 160 00:06:10,333 --> 00:06:12,166 子模組 \n 161 00:06:13,433 --> 00:06:14,500 好然後給他git push \n 162 00:06:16,266 --> 00:06:18,533 那這邊有一個很重要的一個概念 \n 163 00:06:18,533 --> 00:06:19,633 就是你看 \n 164 00:06:20,066 --> 00:06:21,433 他在建子模組的時候 \n 165 00:06:21,433 --> 00:06:23,800 他不只建這個這個目錄 \n 166 00:06:24,033 --> 00:06:26,900 他還會動到這個gitmodules這個答案 \n 167 00:06:27,633 --> 00:06:31,100 所以待會第二個人假如在還沒有建 \n 168 00:06:31,100 --> 00:06:32,100 子模組之前 \n 169 00:06:32,100 --> 00:06:33,166 他就克隆 \n 170 00:06:33,600 --> 00:06:36,700 然後把他的個人倉儲加爲子模組 \n 171 00:06:36,700 --> 00:06:39,333 之後你要去處理這個.git \n 172 00:06:39,666 --> 00:06:41,100 modules的 \n 173 00:06:41,633 --> 00:06:42,433 衝突 \n 174 00:06:43,466 --> 00:06:46,333 OK因爲原來沒有這個git modules \n 175 00:06:46,333 --> 00:06:47,333 後來有了 \n 176 00:06:47,500 --> 00:06:48,800 本來我有兩個人 \n 177 00:06:48,800 --> 00:06:50,066 結果你要加第三個 \n 178 00:06:50,066 --> 00:06:51,600 他那個檔案就會有衝突 \n 179 00:06:51,600 --> 00:06:52,600 你必須要會處理 \n 180 00:06:52,600 --> 00:06:54,166 否則你是推不回去的 \n 181 00:06:54,333 --> 00:06:56,700 好所以我們這樣給它git push之後 \n 182 00:06:56,866 --> 00:06:59,933 我們再回到它對應的 \n 183 00:07:00,000 --> 00:07:01,733 這個倉儲來看 \n 184 00:07:02,133 --> 00:07:04,666 它基本上已經納爲子模組 \n 185 00:07:04,666 --> 00:07:05,966 而且現在應該 \n 186 00:07:07,933 --> 00:07:11,000 應該就在整理它對應的 \n 187 00:07:11,000 --> 00:07:13,300 應該就在整理它對應的這個 \n 188 00:07:13,333 --> 00:07:14,766 網頁 \n 189 00:07:14,800 --> 00:07:17,000 可是我們並沒有對網頁有任何改版 \n 190 00:07:17,000 --> 00:07:18,033 對吧只是 \n 191 00:07:18,066 --> 00:07:22,133 按照他目前30號個人倉儲的 \n 192 00:07:22,133 --> 00:07:23,200 這個版號 \n 193 00:07:23,633 --> 00:07:25,033 把它納爲子模組 \n 194 00:07:25,833 --> 00:07:28,000 OK所以在近端上看的話 \n 195 00:07:28,000 --> 00:07:29,800 其實他就是一個目錄 \n 196 00:07:30,100 --> 00:07:31,533 你假如在近端 \n 197 00:07:31,700 --> 00:07:33,733 看他對應的這個倉儲啊 \n 198 00:07:33,733 --> 00:07:35,100 他就是目錄 \n 199 00:07:35,266 --> 00:07:36,600 那這個表示什麼 \n 200 00:07:37,466 --> 00:07:41,100 表示說你假如有必要在動態 \n 201 00:07:41,100 --> 00:07:42,800 因爲我們知道動態是config \n 202 00:07:42,800 --> 00:07:44,533 裏面是content.htm \n 203 00:07:44,933 --> 00:07:48,200 靜態是content裏面的抄文件 \n 204 00:07:48,233 --> 00:07:50,066 你就可以直接引用這個目錄 \n 205 00:07:51,433 --> 00:07:52,800 而且是 \n 206 00:07:53,500 --> 00:07:56,200 取決於你這邊所列的版本號 \n 207 00:07:56,400 --> 00:07:57,500 這個版本號 \n 208 00:07:57,800 --> 00:07:58,600 就這樣 \n 209 00:07:58,933 --> 00:08:02,900 好所以我們就把這一個影片把它 \n 210 00:08:03,633 --> 00:08:04,833 這個拍下來 \n 211 00:08:04,833 --> 00:08:07,933 所以我們就按再按shift加Print screem就錄起來 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': '公分西德', 'text': "SMap  - 網站地圖 - 依序排列網站的所有頁面。 \n EditA  - 編輯所有頁面 - 將所有頁面放入編輯模式中，主要用於處理頁面遷移、刪除或決定衝突頁面內容版本。 \n 編輯 -編輯頁面-先選擇要編輯的單一頁面後，再點選編輯，即可進入單一頁面的編輯模式。 \n 設定 - 設定網站 - 編輯頁面標題與管理員密碼。 \n 搜尋 - 動態頁面內容的關鍵字搜尋。 \n IUpload  - 圖片檔案上傳 - 圖檔的上傳功能，可以上傳jpg、png和gif文件，其中若在手機上傳圖文件，系統會自動將圖片檔案縮小為800x800大小。 \n IList  - 圖片檔案清單 - 上市可以直接在頁面編輯模式中引用的圖片檔案。 \n FUpload  - 檔案上傳 - 一般檔案的上傳功能，目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl '、'txt'、'html'、'mp4'等，使用者可以自行修改。 \n FList  - 文件清單 - 上市可以直接在頁面編輯模式中引用的上傳文件。 \n 登出 -登出頁面編輯模式。 \n 轉換 - 將動態網站中位於 config/content.htm 文件，透過分頁設定轉為內容目錄中的靜態網頁。 \n acp  - git add、git commit 和 git Push，通常只能在 localhost 或自架主機上網頁表單協助將以太坊改版內容推送到 Github 使用。 \n SStatic  - 啟動靜態網站 - 利用Python啟動網站伺服器功能，可以讓使用者檢查轉檔後的靜態網站內容。 \n RStatic  - Replit 靜態網站 URL - 僅用於 Replit 模式，當使用者點擊 SStatic 後，可以點擊 RStatic 進入尚未推向 Github Pages 的靜態網站。 \n 80  - 由 init.py 中 static_port 決定的連結字符串，一般不使用 80，僅在 Replit 中為了與動態網站佔用端口，才特別設為 80。 \n \n", 'tags': '', 'url': '公分西德.html'}, {'title': '雷普利特', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit  ./init_replit \n 複製時： \n .replit：python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n 對於 cmsimde_site （不需要）： git submodule update --init --recursive \n 對於 cmsimde：pip installflaskflask_corsbs4lxmlpelicanmarkdowngevent \n 密碼產生器：\xa0  https://mde.tw/cmsite/content/Brython.html ?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3485858500000m Python \xa0 \n \n 僅適用於 IPv6 Ubuntu： .ssh 目錄中的配置，將 SSH 會話名稱設為 github.com： 主機 github.com 使用者 git 主機名稱 github.com  ProxyCommand /usr/bin/ncat --proxy p4.cycu.org: 3128 - -proxy-type http %h %p  for Replit:  .ssh 目錄中的配置，將 SSH 會話名稱設為 github.com: 主機 github.com 用戶 git 主機名 github.co  #since Replit 適用於IPv4，因此沒有ProxyCommand 設定需要 #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': '雷普利特.html'}, {'title': '布萊頓', 'text': 'https://en.wikipedia.org/wiki/Python_（程式語言） \n 例子： \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python教學： \n https://docs.python.org/3/tutorial/ \n Python 的非正式介紹 \n 縮排（Python 採用 4 個 Spaces 縮排，以介面執行範圍） \n 變數（ Python 關鍵字 ） \n 註（#單行註解、三單標註或三雙標註標註多行註解） \n 數 (整數 int(), 浮點數 float()) \n 字串 （字符串） \n print (Python 內建函數,  print() 函式) \n Python是控制流程工具 \n 為了 \n 如果 \n 範圍 \n 打開 \n 讀 \n 清單 \n 元組 \n 字典 \n 功能 \n 嘗試...除了 \n 休息 \n 經過 \n 類別 \n 此頁面示範如何在同一頁面下納入多個線上Ace編輯器與執行按鈕（ practice_html.txt 動態頁面超檔案）。 \n Practice_html.txt 動態頁面超檔案應該可以在啟動 Brython 時，設定會將 .py 檔案放入 downloads/py 目錄中引用。 \n 也即將所有對應的 html 也使用 Brython 產生，然後編寫為 類別 後，在範例匯入時透過 實例 引用。 \n <!-- 啟動 Brython --> \n<腳本> \n視窗.onload=函數(){ \nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); \n} \n</腳本> \n 從1累加到100： \n 1 加到 100 \n 將 iterable 與 iterator 相關說明 ，利用 Brython 與 Ace Editor 整理在此頁面。 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 檔案名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從1累加到100第2部分： \n 1 加到 100 cango_三_齒輪 BS蛇 人工智慧俄羅斯方塊 旋轉塊 \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 檔案名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': '布萊頓.html'}]};